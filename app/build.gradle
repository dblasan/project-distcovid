apply plugin: 'com.android.application'
apply plugin: 'jacoco'
// source: https://docs.gradle.org/current/userguide/jacoco_plugin.html
//apply from: '../jacoco.gradle'

// android
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.sose20.swt2.dist_covid"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

// jacoco
// source: https://tech.thalia.de/sonarqube-integration-in-einem-android-projekt/
ext{
    coverageSourceDirs = 'src/test/java'
}

jacoco{
    toolVersion "0.8.5"
    //reportsDir = file("$buildDir/reports/jacoco")
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']){
    group = "Reporting"
    description = "Generate Jacoco reports for Debug and Build"

    // define type of reports to generate
    reports{
        xml.enabled = true
        //xml.destination file("${jacoco.reportsDir}/jacocoReportXml")

        html.enabled = true
        //html.destination file("${jacoco.reportsDir}/jacocoReportHtml")
    }

    def excludeFiles = [
            '**/R.class',
            '**/R$*.class',
            '**/build/generated/**',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            'com/**/*.*',
            'androidTest/**/*.*',
            '**/data/model/*'
    ]

    def debugTree = fileTree(
            dir:"${buildDir}/intermediates/classes/debug",
            excludes: excludeFiles
    )

    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'jacoco/outputs/code-coverage/connected/*coverage.ec'
    ])

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
