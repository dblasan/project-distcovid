apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: "org.sonarqube" // required to see method sonarqube()

jacoco{
    toolVersion '0.8.5'
    //destinationFile = file('$buildDir/jacoco/jacocoTest.exec')
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.sose20.swt2.dist_covid"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            testCoverageEnabled false // disable test coverage for release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

// Jacoco coverage
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/data/models/*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])

}

// sonarqube
sonarqube {
    properties {
        property 'sonar.projectKey', 'project-distcovid-key'
        property 'sonar.host.url', 'http://localhost:9000/'
        property 'sonar.login', 'f85703f07980331332bdb268cffe6575ea83a74b'
        property 'sonar.projectName', 'project-distcovid-sonar'
        property 'sonar.working.directory', '$project.buildDir/sonar'
        property 'sonar.projectVersion', '1'
        property 'sonar.scm.provider', 'git'
        property 'sonar.sources', 'src/main'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.java.binaries', 'build'
       // property 'sonar.java.libraries', 'libs/*.jar'
        property 'sonar.java.test.binaries', 'build'
        //property 'sonar.java.test.libraries', 'libs/*.jar'
        property 'sonar.jacoco.reportPaths', 'build/jacoco/testDebugUnitTest.exec'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
